// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.18.1
// source: api/v1/blk.proto

package api_v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    uint32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *Response) Reset() {
	*x = Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_blk_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_blk_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_api_v1_blk_proto_rawDescGZIP(), []int{0}
}

func (x *Response) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *Response) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type LogData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventName string `protobuf:"bytes,1,opt,name=EventName,proto3" json:"EventName,omitempty"`
}

func (x *LogData) Reset() {
	*x = LogData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_blk_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogData) ProtoMessage() {}

func (x *LogData) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_blk_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogData.ProtoReflect.Descriptor instead.
func (*LogData) Descriptor() ([]byte, []int) {
	return file_api_v1_blk_proto_rawDescGZIP(), []int{1}
}

func (x *LogData) GetEventName() string {
	if x != nil {
		return x.EventName
	}
	return ""
}

type Genesis struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date          uint32           `protobuf:"varint,1,opt,name=date,proto3" json:"date,omitempty"`
	Chainid       uint32           `protobuf:"varint,2,opt,name=chainid,proto3" json:"chainid,omitempty"`
	Transperblock uint32           `protobuf:"varint,3,opt,name=transperblock,proto3" json:"transperblock,omitempty"`
	Difficulty    uint32           `protobuf:"varint,4,opt,name=difficulty,proto3" json:"difficulty,omitempty"`
	Minreward     uint32           `protobuf:"varint,5,opt,name=minreward,proto3" json:"minreward,omitempty"`
	Gasprice      uint64           `protobuf:"varint,6,opt,name=gasprice,proto3" json:"gasprice,omitempty"`
	Balances      map[string]int32 `protobuf:"bytes,7,rep,name=balances,proto3" json:"balances,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *Genesis) Reset() {
	*x = Genesis{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_blk_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Genesis) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Genesis) ProtoMessage() {}

func (x *Genesis) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_blk_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Genesis.ProtoReflect.Descriptor instead.
func (*Genesis) Descriptor() ([]byte, []int) {
	return file_api_v1_blk_proto_rawDescGZIP(), []int{2}
}

func (x *Genesis) GetDate() uint32 {
	if x != nil {
		return x.Date
	}
	return 0
}

func (x *Genesis) GetChainid() uint32 {
	if x != nil {
		return x.Chainid
	}
	return 0
}

func (x *Genesis) GetTransperblock() uint32 {
	if x != nil {
		return x.Transperblock
	}
	return 0
}

func (x *Genesis) GetDifficulty() uint32 {
	if x != nil {
		return x.Difficulty
	}
	return 0
}

func (x *Genesis) GetMinreward() uint32 {
	if x != nil {
		return x.Minreward
	}
	return 0
}

func (x *Genesis) GetGasprice() uint64 {
	if x != nil {
		return x.Gasprice
	}
	return 0
}

func (x *Genesis) GetBalances() map[string]int32 {
	if x != nil {
		return x.Balances
	}
	return nil
}

type Account struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountID string `protobuf:"bytes,1,opt,name=AccountID,proto3" json:"AccountID,omitempty"`
	Nounce    uint64 `protobuf:"varint,2,opt,name=Nounce,proto3" json:"Nounce,omitempty"`
	Balance   uint64 `protobuf:"varint,3,opt,name=Balance,proto3" json:"Balance,omitempty"`
}

func (x *Account) Reset() {
	*x = Account{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_blk_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Account) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Account) ProtoMessage() {}

func (x *Account) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_blk_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Account.ProtoReflect.Descriptor instead.
func (*Account) Descriptor() ([]byte, []int) {
	return file_api_v1_blk_proto_rawDescGZIP(), []int{3}
}

func (x *Account) GetAccountID() string {
	if x != nil {
		return x.AccountID
	}
	return ""
}

func (x *Account) GetNounce() uint64 {
	if x != nil {
		return x.Nounce
	}
	return 0
}

func (x *Account) GetBalance() uint64 {
	if x != nil {
		return x.Balance
	}
	return 0
}

type Accounts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Accounts []*Account `protobuf:"bytes,1,rep,name=accounts,proto3" json:"accounts,omitempty"`
}

func (x *Accounts) Reset() {
	*x = Accounts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_blk_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Accounts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Accounts) ProtoMessage() {}

func (x *Accounts) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_blk_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Accounts.ProtoReflect.Descriptor instead.
func (*Accounts) Descriptor() ([]byte, []int) {
	return file_api_v1_blk_proto_rawDescGZIP(), []int{4}
}

func (x *Accounts) GetAccounts() []*Account {
	if x != nil {
		return x.Accounts
	}
	return nil
}

type AccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account string `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
}

func (x *AccountRequest) Reset() {
	*x = AccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_blk_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountRequest) ProtoMessage() {}

func (x *AccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_blk_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountRequest.ProtoReflect.Descriptor instead.
func (*AccountRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_blk_proto_rawDescGZIP(), []int{5}
}

func (x *AccountRequest) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

type TokenTxRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountID  string `protobuf:"bytes,1,opt,name=AccountID,proto3" json:"AccountID,omitempty"`
	Account2ID string `protobuf:"bytes,2,opt,name=Account2ID,proto3" json:"Account2ID,omitempty"`
	Token      uint64 `protobuf:"varint,3,opt,name=Token,proto3" json:"Token,omitempty"`
}

func (x *TokenTxRequest) Reset() {
	*x = TokenTxRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_blk_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenTxRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenTxRequest) ProtoMessage() {}

func (x *TokenTxRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_blk_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenTxRequest.ProtoReflect.Descriptor instead.
func (*TokenTxRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_blk_proto_rawDescGZIP(), []int{6}
}

func (x *TokenTxRequest) GetAccountID() string {
	if x != nil {
		return x.AccountID
	}
	return ""
}

func (x *TokenTxRequest) GetAccount2ID() string {
	if x != nil {
		return x.Account2ID
	}
	return ""
}

func (x *TokenTxRequest) GetToken() uint64 {
	if x != nil {
		return x.Token
	}
	return 0
}

type Balance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account  string    `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	Balance  uint64    `protobuf:"varint,2,opt,name=balance,proto3" json:"balance,omitempty"`
	Response *Response `protobuf:"bytes,3,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *Balance) Reset() {
	*x = Balance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_blk_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Balance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Balance) ProtoMessage() {}

func (x *Balance) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_blk_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Balance.ProtoReflect.Descriptor instead.
func (*Balance) Descriptor() ([]byte, []int) {
	return file_api_v1_blk_proto_rawDescGZIP(), []int{7}
}

func (x *Balance) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *Balance) GetBalance() uint64 {
	if x != nil {
		return x.Balance
	}
	return 0
}

func (x *Balance) GetResponse() *Response {
	if x != nil {
		return x.Response
	}
	return nil
}

type Balances struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lastestblock string     `protobuf:"bytes,1,opt,name=lastestblock,proto3" json:"lastestblock,omitempty"`
	Uncommited   uint32     `protobuf:"varint,2,opt,name=uncommited,proto3" json:"uncommited,omitempty"`
	Balances     []*Balance `protobuf:"bytes,3,rep,name=balances,proto3" json:"balances,omitempty"`
	Response     *Response  `protobuf:"bytes,4,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *Balances) Reset() {
	*x = Balances{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_blk_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Balances) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Balances) ProtoMessage() {}

func (x *Balances) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_blk_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Balances.ProtoReflect.Descriptor instead.
func (*Balances) Descriptor() ([]byte, []int) {
	return file_api_v1_blk_proto_rawDescGZIP(), []int{8}
}

func (x *Balances) GetLastestblock() string {
	if x != nil {
		return x.Lastestblock
	}
	return ""
}

func (x *Balances) GetUncommited() uint32 {
	if x != nil {
		return x.Uncommited
	}
	return 0
}

func (x *Balances) GetBalances() []*Balance {
	if x != nil {
		return x.Balances
	}
	return nil
}

func (x *Balances) GetResponse() *Response {
	if x != nil {
		return x.Response
	}
	return nil
}

type RealAddress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Street   string    `protobuf:"bytes,1,opt,name=street,proto3" json:"street,omitempty"`
	Street2  string    `protobuf:"bytes,2,opt,name=street2,proto3" json:"street2,omitempty"`
	City     string    `protobuf:"bytes,3,opt,name=city,proto3" json:"city,omitempty"`
	Postal   string    `protobuf:"bytes,4,opt,name=postal,proto3" json:"postal,omitempty"`
	Province string    `protobuf:"bytes,5,opt,name=province,proto3" json:"province,omitempty"`
	Country  string    `protobuf:"bytes,6,opt,name=country,proto3" json:"country,omitempty"`
	Response *Response `protobuf:"bytes,7,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *RealAddress) Reset() {
	*x = RealAddress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_blk_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RealAddress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RealAddress) ProtoMessage() {}

func (x *RealAddress) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_blk_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RealAddress.ProtoReflect.Descriptor instead.
func (*RealAddress) Descriptor() ([]byte, []int) {
	return file_api_v1_blk_proto_rawDescGZIP(), []int{9}
}

func (x *RealAddress) GetStreet() string {
	if x != nil {
		return x.Street
	}
	return ""
}

func (x *RealAddress) GetStreet2() string {
	if x != nil {
		return x.Street2
	}
	return ""
}

func (x *RealAddress) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *RealAddress) GetPostal() string {
	if x != nil {
		return x.Postal
	}
	return ""
}

func (x *RealAddress) GetProvince() string {
	if x != nil {
		return x.Province
	}
	return ""
}

func (x *RealAddress) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *RealAddress) GetResponse() *Response {
	if x != nil {
		return x.Response
	}
	return nil
}

type BookBetInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State        uint32         `protobuf:"varint,1,opt,name=state,proto3" json:"state,omitempty"`
	Participants []*RealAddress `protobuf:"bytes,2,rep,name=participants,proto3" json:"participants,omitempty"`
	Response     *Response      `protobuf:"bytes,3,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *BookBetInfo) Reset() {
	*x = BookBetInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_blk_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BookBetInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookBetInfo) ProtoMessage() {}

func (x *BookBetInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_blk_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BookBetInfo.ProtoReflect.Descriptor instead.
func (*BookBetInfo) Descriptor() ([]byte, []int) {
	return file_api_v1_blk_proto_rawDescGZIP(), []int{10}
}

func (x *BookBetInfo) GetState() uint32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *BookBetInfo) GetParticipants() []*RealAddress {
	if x != nil {
		return x.Participants
	}
	return nil
}

func (x *BookBetInfo) GetResponse() *Response {
	if x != nil {
		return x.Response
	}
	return nil
}

type TransactionDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash              string    `protobuf:"bytes,1,opt,name=Hash,proto3" json:"Hash,omitempty"`
	Nonce             uint64    `protobuf:"varint,2,opt,name=Nonce,proto3" json:"Nonce,omitempty"`
	GasLimit          uint64    `protobuf:"varint,3,opt,name=GasLimit,proto3" json:"GasLimit,omitempty"`
	GasOfferPriceGWei string    `protobuf:"bytes,4,opt,name=GasOfferPriceGWei,proto3" json:"GasOfferPriceGWei,omitempty"`
	Value             string    `protobuf:"bytes,5,opt,name=Value,proto3" json:"Value,omitempty"`
	MaxGasPriceGWei   string    `protobuf:"bytes,6,opt,name=MaxGasPriceGWei,proto3" json:"MaxGasPriceGWei,omitempty"`
	MaxGasPriceUSD    string    `protobuf:"bytes,7,opt,name=MaxGasPriceUSD,proto3" json:"MaxGasPriceUSD,omitempty"`
	Response          *Response `protobuf:"bytes,8,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *TransactionDetails) Reset() {
	*x = TransactionDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_blk_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionDetails) ProtoMessage() {}

func (x *TransactionDetails) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_blk_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionDetails.ProtoReflect.Descriptor instead.
func (*TransactionDetails) Descriptor() ([]byte, []int) {
	return file_api_v1_blk_proto_rawDescGZIP(), []int{11}
}

func (x *TransactionDetails) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *TransactionDetails) GetNonce() uint64 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *TransactionDetails) GetGasLimit() uint64 {
	if x != nil {
		return x.GasLimit
	}
	return 0
}

func (x *TransactionDetails) GetGasOfferPriceGWei() string {
	if x != nil {
		return x.GasOfferPriceGWei
	}
	return ""
}

func (x *TransactionDetails) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *TransactionDetails) GetMaxGasPriceGWei() string {
	if x != nil {
		return x.MaxGasPriceGWei
	}
	return ""
}

func (x *TransactionDetails) GetMaxGasPriceUSD() string {
	if x != nil {
		return x.MaxGasPriceUSD
	}
	return ""
}

func (x *TransactionDetails) GetResponse() *Response {
	if x != nil {
		return x.Response
	}
	return nil
}

type ReceiptDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status        uint64    `protobuf:"varint,1,opt,name=Status,proto3" json:"Status,omitempty"`
	GasUsed       uint64    `protobuf:"varint,2,opt,name=GasUsed,proto3" json:"GasUsed,omitempty"`
	GasPriceGWei  string    `protobuf:"bytes,3,opt,name=GasPriceGWei,proto3" json:"GasPriceGWei,omitempty"`
	GasPriceUSD   string    `protobuf:"bytes,4,opt,name=GasPriceUSD,proto3" json:"GasPriceUSD,omitempty"`
	FinalCostGWei string    `protobuf:"bytes,5,opt,name=FinalCostGWei,proto3" json:"FinalCostGWei,omitempty"`
	FinalCostUSD  string    `protobuf:"bytes,6,opt,name=FinalCostUSD,proto3" json:"FinalCostUSD,omitempty"`
	Response      *Response `protobuf:"bytes,7,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *ReceiptDetails) Reset() {
	*x = ReceiptDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_blk_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReceiptDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceiptDetails) ProtoMessage() {}

func (x *ReceiptDetails) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_blk_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceiptDetails.ProtoReflect.Descriptor instead.
func (*ReceiptDetails) Descriptor() ([]byte, []int) {
	return file_api_v1_blk_proto_rawDescGZIP(), []int{12}
}

func (x *ReceiptDetails) GetStatus() uint64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ReceiptDetails) GetGasUsed() uint64 {
	if x != nil {
		return x.GasUsed
	}
	return 0
}

func (x *ReceiptDetails) GetGasPriceGWei() string {
	if x != nil {
		return x.GasPriceGWei
	}
	return ""
}

func (x *ReceiptDetails) GetGasPriceUSD() string {
	if x != nil {
		return x.GasPriceUSD
	}
	return ""
}

func (x *ReceiptDetails) GetFinalCostGWei() string {
	if x != nil {
		return x.FinalCostGWei
	}
	return ""
}

func (x *ReceiptDetails) GetFinalCostUSD() string {
	if x != nil {
		return x.FinalCostUSD
	}
	return ""
}

func (x *ReceiptDetails) GetResponse() *Response {
	if x != nil {
		return x.Response
	}
	return nil
}

type BalanceDiff struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BeforeGWei string    `protobuf:"bytes,1,opt,name=BeforeGWei,proto3" json:"BeforeGWei,omitempty"`
	AfterGWei  string    `protobuf:"bytes,2,opt,name=AfterGWei,proto3" json:"AfterGWei,omitempty"`
	DiffGWei   string    `protobuf:"bytes,3,opt,name=DiffGWei,proto3" json:"DiffGWei,omitempty"`
	DiffUSD    string    `protobuf:"bytes,4,opt,name=DiffUSD,proto3" json:"DiffUSD,omitempty"`
	Response   *Response `protobuf:"bytes,5,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *BalanceDiff) Reset() {
	*x = BalanceDiff{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_blk_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BalanceDiff) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BalanceDiff) ProtoMessage() {}

func (x *BalanceDiff) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_blk_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BalanceDiff.ProtoReflect.Descriptor instead.
func (*BalanceDiff) Descriptor() ([]byte, []int) {
	return file_api_v1_blk_proto_rawDescGZIP(), []int{13}
}

func (x *BalanceDiff) GetBeforeGWei() string {
	if x != nil {
		return x.BeforeGWei
	}
	return ""
}

func (x *BalanceDiff) GetAfterGWei() string {
	if x != nil {
		return x.AfterGWei
	}
	return ""
}

func (x *BalanceDiff) GetDiffGWei() string {
	if x != nil {
		return x.DiffGWei
	}
	return ""
}

func (x *BalanceDiff) GetDiffUSD() string {
	if x != nil {
		return x.DiffUSD
	}
	return ""
}

func (x *BalanceDiff) GetResponse() *Response {
	if x != nil {
		return x.Response
	}
	return nil
}

type Gas struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LastBlock       uint64    `protobuf:"varint,1,opt,name=LastBlock,proto3" json:"LastBlock,omitempty"`
	SafeGasPrice    uint64    `protobuf:"varint,2,opt,name=SafeGasPrice,proto3" json:"SafeGasPrice,omitempty"`       // should be big.int64
	ProposeGasPrice uint64    `protobuf:"varint,3,opt,name=ProposeGasPrice,proto3" json:"ProposeGasPrice,omitempty"` // should be big.int64
	FastGasPrice    uint64    `protobuf:"varint,4,opt,name=FastGasPrice,proto3" json:"FastGasPrice,omitempty"`       // should be big.int64
	SuggestBaseFee  uint64    `protobuf:"varint,5,opt,name=SuggestBaseFee,proto3" json:"SuggestBaseFee,omitempty"`   // should be big.int64
	Response        *Response `protobuf:"bytes,6,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *Gas) Reset() {
	*x = Gas{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_blk_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Gas) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Gas) ProtoMessage() {}

func (x *Gas) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_blk_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Gas.ProtoReflect.Descriptor instead.
func (*Gas) Descriptor() ([]byte, []int) {
	return file_api_v1_blk_proto_rawDescGZIP(), []int{14}
}

func (x *Gas) GetLastBlock() uint64 {
	if x != nil {
		return x.LastBlock
	}
	return 0
}

func (x *Gas) GetSafeGasPrice() uint64 {
	if x != nil {
		return x.SafeGasPrice
	}
	return 0
}

func (x *Gas) GetProposeGasPrice() uint64 {
	if x != nil {
		return x.ProposeGasPrice
	}
	return 0
}

func (x *Gas) GetFastGasPrice() uint64 {
	if x != nil {
		return x.FastGasPrice
	}
	return 0
}

func (x *Gas) GetSuggestBaseFee() uint64 {
	if x != nil {
		return x.SuggestBaseFee
	}
	return 0
}

func (x *Gas) GetResponse() *Response {
	if x != nil {
		return x.Response
	}
	return nil
}

type Etherscan struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiKey   string    `protobuf:"bytes,1,opt,name=apiKey,proto3" json:"apiKey,omitempty"`
	Network  string    `protobuf:"bytes,2,opt,name=network,proto3" json:"network,omitempty"`
	Headers  string    `protobuf:"bytes,3,opt,name=headers,proto3" json:"headers,omitempty"`
	Client   string    `protobuf:"bytes,4,opt,name=client,proto3" json:"client,omitempty"` // a http.clicnt representation
	Response *Response `protobuf:"bytes,5,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *Etherscan) Reset() {
	*x = Etherscan{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_blk_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Etherscan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Etherscan) ProtoMessage() {}

func (x *Etherscan) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_blk_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Etherscan.ProtoReflect.Descriptor instead.
func (*Etherscan) Descriptor() ([]byte, []int) {
	return file_api_v1_blk_proto_rawDescGZIP(), []int{15}
}

func (x *Etherscan) GetApiKey() string {
	if x != nil {
		return x.ApiKey
	}
	return ""
}

func (x *Etherscan) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *Etherscan) GetHeaders() string {
	if x != nil {
		return x.Headers
	}
	return ""
}

func (x *Etherscan) GetClient() string {
	if x != nil {
		return x.Client
	}
	return ""
}

func (x *Etherscan) GetResponse() *Response {
	if x != nil {
		return x.Response
	}
	return nil
}

type DialedBackend struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Client  string `protobuf:"bytes,1,opt,name=client,proto3" json:"client,omitempty"` // ethclient.Client representation
	String_ string `protobuf:"bytes,2,opt,name=string,proto3" json:"string,omitempty"`
	ChainID uint64 `protobuf:"varint,3,opt,name=chainID,proto3" json:"chainID,omitempty"` // big.int
}

func (x *DialedBackend) Reset() {
	*x = DialedBackend{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_blk_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DialedBackend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DialedBackend) ProtoMessage() {}

func (x *DialedBackend) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_blk_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DialedBackend.ProtoReflect.Descriptor instead.
func (*DialedBackend) Descriptor() ([]byte, []int) {
	return file_api_v1_blk_proto_rawDescGZIP(), []int{16}
}

func (x *DialedBackend) GetClient() string {
	if x != nil {
		return x.Client
	}
	return ""
}

func (x *DialedBackend) GetString_() string {
	if x != nil {
		return x.String_
	}
	return ""
}

func (x *DialedBackend) GetChainID() uint64 {
	if x != nil {
		return x.ChainID
	}
	return 0
}

type SimulatedBackend struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AutoCommit  bool     `protobuf:"varint,2,opt,name=AutoCommit,proto3" json:"AutoCommit,omitempty"`
	Network     string   `protobuf:"bytes,3,opt,name=network,proto3" json:"network,omitempty"`
	ChainID     uint64   `protobuf:"varint,4,opt,name=chainID,proto3" json:"chainID,omitempty"`        // big.int32
	PrivateKeys []string `protobuf:"bytes,5,rep,name=PrivateKeys,proto3" json:"PrivateKeys,omitempty"` // []*ecdsa.PrivateKey
}

func (x *SimulatedBackend) Reset() {
	*x = SimulatedBackend{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_blk_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SimulatedBackend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SimulatedBackend) ProtoMessage() {}

func (x *SimulatedBackend) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_blk_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SimulatedBackend.ProtoReflect.Descriptor instead.
func (*SimulatedBackend) Descriptor() ([]byte, []int) {
	return file_api_v1_blk_proto_rawDescGZIP(), []int{17}
}

func (x *SimulatedBackend) GetAutoCommit() bool {
	if x != nil {
		return x.AutoCommit
	}
	return false
}

func (x *SimulatedBackend) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *SimulatedBackend) GetChainID() uint64 {
	if x != nil {
		return x.ChainID
	}
	return 0
}

func (x *SimulatedBackend) GetPrivateKeys() []string {
	if x != nil {
		return x.PrivateKeys
	}
	return nil
}

type Client struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address *RealAddress `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"` // ????
}

func (x *Client) Reset() {
	*x = Client{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_blk_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Client) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Client) ProtoMessage() {}

func (x *Client) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_blk_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Client.ProtoReflect.Descriptor instead.
func (*Client) Descriptor() ([]byte, []int) {
	return file_api_v1_blk_proto_rawDescGZIP(), []int{18}
}

func (x *Client) GetAddress() *RealAddress {
	if x != nil {
		return x.Address
	}
	return nil
}

type ModNScalar struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	N []uint32 `protobuf:"varint,1,rep,packed,name=n,proto3" json:"n,omitempty"` // n [8]uint32
}

func (x *ModNScalar) Reset() {
	*x = ModNScalar{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_blk_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModNScalar) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModNScalar) ProtoMessage() {}

func (x *ModNScalar) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_blk_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModNScalar.ProtoReflect.Descriptor instead.
func (*ModNScalar) Descriptor() ([]byte, []int) {
	return file_api_v1_blk_proto_rawDescGZIP(), []int{19}
}

func (x *ModNScalar) GetN() []uint32 {
	if x != nil {
		return x.N
	}
	return nil
}

type FieldVal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	N []uint32 `protobuf:"varint,1,rep,packed,name=n,proto3" json:"n,omitempty"` // n [10]uint32
}

func (x *FieldVal) Reset() {
	*x = FieldVal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_blk_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FieldVal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldVal) ProtoMessage() {}

func (x *FieldVal) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_blk_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldVal.ProtoReflect.Descriptor instead.
func (*FieldVal) Descriptor() ([]byte, []int) {
	return file_api_v1_blk_proto_rawDescGZIP(), []int{20}
}

func (x *FieldVal) GetN() []uint32 {
	if x != nil {
		return x.N
	}
	return nil
}

type PrivateKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key      *ModNScalar `protobuf:"bytes,1,opt,name=Key,proto3" json:"Key,omitempty"`
	Response *Response   `protobuf:"bytes,2,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *PrivateKey) Reset() {
	*x = PrivateKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_blk_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrivateKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrivateKey) ProtoMessage() {}

func (x *PrivateKey) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_blk_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrivateKey.ProtoReflect.Descriptor instead.
func (*PrivateKey) Descriptor() ([]byte, []int) {
	return file_api_v1_blk_proto_rawDescGZIP(), []int{21}
}

func (x *PrivateKey) GetKey() *ModNScalar {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *PrivateKey) GetResponse() *Response {
	if x != nil {
		return x.Response
	}
	return nil
}

type PublicKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X        *FieldVal `protobuf:"bytes,1,opt,name=x,proto3" json:"x,omitempty"`
	Y        *FieldVal `protobuf:"bytes,2,opt,name=y,proto3" json:"y,omitempty"`
	Response *Response `protobuf:"bytes,3,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *PublicKey) Reset() {
	*x = PublicKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_blk_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublicKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicKey) ProtoMessage() {}

func (x *PublicKey) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_blk_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublicKey.ProtoReflect.Descriptor instead.
func (*PublicKey) Descriptor() ([]byte, []int) {
	return file_api_v1_blk_proto_rawDescGZIP(), []int{22}
}

func (x *PublicKey) GetX() *FieldVal {
	if x != nil {
		return x.X
	}
	return nil
}

func (x *PublicKey) GetY() *FieldVal {
	if x != nil {
		return x.Y
	}
	return nil
}

func (x *PublicKey) GetResponse() *Response {
	if x != nil {
		return x.Response
	}
	return nil
}

type LookupResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusCode int32 `protobuf:"varint,1,opt,name=StatusCode,proto3" json:"StatusCode,omitempty"`
	//google.protobuf.Any handler = 2;  // HandlerFunc
	Params map[string]string `protobuf:"bytes,3,rep,name=Params,proto3" json:"Params,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	//map<string, google.protobuf.Any> leafHandler = 4;
	Response *Response `protobuf:"bytes,5,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *LookupResult) Reset() {
	*x = LookupResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_blk_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LookupResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LookupResult) ProtoMessage() {}

func (x *LookupResult) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_blk_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LookupResult.ProtoReflect.Descriptor instead.
func (*LookupResult) Descriptor() ([]byte, []int) {
	return file_api_v1_blk_proto_rawDescGZIP(), []int{23}
}

func (x *LookupResult) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *LookupResult) GetParams() map[string]string {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *LookupResult) GetResponse() *Response {
	if x != nil {
		return x.Response
	}
	return nil
}

type Node struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path          string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Priority      uint32 `protobuf:"varint,2,opt,name=priority,proto3" json:"priority,omitempty"`
	WildcardChild *Node  `protobuf:"bytes,3,opt,name=wildcardChild,proto3" json:"wildcardChild,omitempty"`
	CatchAllChild *Node  `protobuf:"bytes,4,opt,name=catchAllChild,proto3" json:"catchAllChild,omitempty"` // catchAllChild *node
	AddSlash      bool   `protobuf:"varint,5,opt,name=addSlash,proto3" json:"addSlash,omitempty"`
	IsCatchAll    bool   `protobuf:"varint,6,opt,name=isCatchAll,proto3" json:"isCatchAll,omitempty"`
	ImplicitHead  bool   `protobuf:"varint,7,opt,name=implicitHead,proto3" json:"implicitHead,omitempty"`
	//map<string, google.protobuf.Any> leafHandler = 8; // leafHandler map[string]HandlerFunc
	LeafWildcardNames []string `protobuf:"bytes,9,rep,name=leafWildcardNames,proto3" json:"leafWildcardNames,omitempty"`
}

func (x *Node) Reset() {
	*x = Node{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_blk_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Node) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Node) ProtoMessage() {}

func (x *Node) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_blk_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Node.ProtoReflect.Descriptor instead.
func (*Node) Descriptor() ([]byte, []int) {
	return file_api_v1_blk_proto_rawDescGZIP(), []int{24}
}

func (x *Node) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *Node) GetPriority() uint32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *Node) GetWildcardChild() *Node {
	if x != nil {
		return x.WildcardChild
	}
	return nil
}

func (x *Node) GetCatchAllChild() *Node {
	if x != nil {
		return x.CatchAllChild
	}
	return nil
}

func (x *Node) GetAddSlash() bool {
	if x != nil {
		return x.AddSlash
	}
	return false
}

func (x *Node) GetIsCatchAll() bool {
	if x != nil {
		return x.IsCatchAll
	}
	return false
}

func (x *Node) GetImplicitHead() bool {
	if x != nil {
		return x.ImplicitHead
	}
	return false
}

func (x *Node) GetLeafWildcardNames() []string {
	if x != nil {
		return x.LeafWildcardNames
	}
	return nil
}

type Tx struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromAccount string    `protobuf:"bytes,1,opt,name=FromAccount,proto3" json:"FromAccount,omitempty"` // FromAccount database.AccountID
	FromName    string    `protobuf:"bytes,2,opt,name=FromName,proto3" json:"FromName,omitempty"`
	To          string    `protobuf:"bytes,3,opt,name=To,proto3" json:"To,omitempty"` //  database.AccountID `json:"to"`
	ToName      string    `protobuf:"bytes,4,opt,name=ToName,proto3" json:"ToName,omitempty"`
	ChainID     uint32    `protobuf:"varint,5,opt,name=ChainID,proto3" json:"ChainID,omitempty"`
	Nonce       uint64    `protobuf:"varint,6,opt,name=Nonce,proto3" json:"Nonce,omitempty"`
	Value       uint64    `protobuf:"varint,7,opt,name=Value,proto3" json:"Value,omitempty"`
	Tip         uint64    `protobuf:"varint,8,opt,name=Tip,proto3" json:"Tip,omitempty"`
	Data        [][]byte  `protobuf:"bytes,9,rep,name=Data,proto3" json:"Data,omitempty"`
	TimeStamp   uint64    `protobuf:"varint,10,opt,name=TimeStamp,proto3" json:"TimeStamp,omitempty"`
	GasPrice    uint64    `protobuf:"varint,11,opt,name=GasPrice,proto3" json:"GasPrice,omitempty"`
	GasUnits    uint64    `protobuf:"varint,12,opt,name=GasUnits,proto3" json:"GasUnits,omitempty"`
	Sig         string    `protobuf:"bytes,13,opt,name=Sig,proto3" json:"Sig,omitempty"`
	Proof       []string  `protobuf:"bytes,14,rep,name=Proof,proto3" json:"Proof,omitempty"`
	ProofOrder  []string  `protobuf:"bytes,15,rep,name=ProofOrder,proto3" json:"ProofOrder,omitempty"`
	Response    *Response `protobuf:"bytes,16,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *Tx) Reset() {
	*x = Tx{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_blk_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tx) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tx) ProtoMessage() {}

func (x *Tx) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_blk_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tx.ProtoReflect.Descriptor instead.
func (*Tx) Descriptor() ([]byte, []int) {
	return file_api_v1_blk_proto_rawDescGZIP(), []int{25}
}

func (x *Tx) GetFromAccount() string {
	if x != nil {
		return x.FromAccount
	}
	return ""
}

func (x *Tx) GetFromName() string {
	if x != nil {
		return x.FromName
	}
	return ""
}

func (x *Tx) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *Tx) GetToName() string {
	if x != nil {
		return x.ToName
	}
	return ""
}

func (x *Tx) GetChainID() uint32 {
	if x != nil {
		return x.ChainID
	}
	return 0
}

func (x *Tx) GetNonce() uint64 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *Tx) GetValue() uint64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *Tx) GetTip() uint64 {
	if x != nil {
		return x.Tip
	}
	return 0
}

func (x *Tx) GetData() [][]byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Tx) GetTimeStamp() uint64 {
	if x != nil {
		return x.TimeStamp
	}
	return 0
}

func (x *Tx) GetGasPrice() uint64 {
	if x != nil {
		return x.GasPrice
	}
	return 0
}

func (x *Tx) GetGasUnits() uint64 {
	if x != nil {
		return x.GasUnits
	}
	return 0
}

func (x *Tx) GetSig() string {
	if x != nil {
		return x.Sig
	}
	return ""
}

func (x *Tx) GetProof() []string {
	if x != nil {
		return x.Proof
	}
	return nil
}

func (x *Tx) GetProofOrder() []string {
	if x != nil {
		return x.ProofOrder
	}
	return nil
}

func (x *Tx) GetResponse() *Response {
	if x != nil {
		return x.Response
	}
	return nil
}

type TxRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account *Account `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	Tx      *Tx      `protobuf:"bytes,2,opt,name=Tx,proto3" json:"Tx,omitempty"`
	ChainId uint64   `protobuf:"varint,3,opt,name=chainId,proto3" json:"chainId,omitempty"`
}

func (x *TxRequest) Reset() {
	*x = TxRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_blk_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TxRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxRequest) ProtoMessage() {}

func (x *TxRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_blk_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxRequest.ProtoReflect.Descriptor instead.
func (*TxRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_blk_proto_rawDescGZIP(), []int{26}
}

func (x *TxRequest) GetAccount() *Account {
	if x != nil {
		return x.Account
	}
	return nil
}

func (x *TxRequest) GetTx() *Tx {
	if x != nil {
		return x.Tx
	}
	return nil
}

func (x *TxRequest) GetChainId() uint64 {
	if x != nil {
		return x.ChainId
	}
	return 0
}

type TxRequestWithPhrase struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Request *TxRequest `protobuf:"bytes,1,opt,name=request,proto3" json:"request,omitempty"`
	Phrase  string     `protobuf:"bytes,2,opt,name=phrase,proto3" json:"phrase,omitempty"`
}

func (x *TxRequestWithPhrase) Reset() {
	*x = TxRequestWithPhrase{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_blk_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TxRequestWithPhrase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxRequestWithPhrase) ProtoMessage() {}

func (x *TxRequestWithPhrase) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_blk_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxRequestWithPhrase.ProtoReflect.Descriptor instead.
func (*TxRequestWithPhrase) Descriptor() ([]byte, []int) {
	return file_api_v1_blk_proto_rawDescGZIP(), []int{27}
}

func (x *TxRequestWithPhrase) GetRequest() *TxRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

func (x *TxRequestWithPhrase) GetPhrase() string {
	if x != nil {
		return x.Phrase
	}
	return ""
}

type Block struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Number        uint64    `protobuf:"varint,1,opt,name=Number,proto3" json:"Number,omitempty"`
	PrevBlockHash string    `protobuf:"bytes,2,opt,name=PrevBlockHash,proto3" json:"PrevBlockHash,omitempty"`
	TimeStamp     uint64    `protobuf:"varint,3,opt,name=TimeStamp,proto3" json:"TimeStamp,omitempty"`
	BeneficiaryID uint64    `protobuf:"varint,4,opt,name=BeneficiaryID,proto3" json:"BeneficiaryID,omitempty"` //  database.AccountID
	Difficulty    uint32    `protobuf:"varint,5,opt,name=Difficulty,proto3" json:"Difficulty,omitempty"`
	MiningReward  uint64    `protobuf:"varint,6,opt,name=MiningReward,proto3" json:"MiningReward,omitempty"`
	StateRoot     string    `protobuf:"bytes,7,opt,name=StateRoot,proto3" json:"StateRoot,omitempty"`
	TransRoot     string    `protobuf:"bytes,8,opt,name=TransRoot,proto3" json:"TransRoot,omitempty"`
	Nonce         uint64    `protobuf:"varint,9,opt,name=Nonce,proto3" json:"Nonce,omitempty"`
	Transactions  []*Tx     `protobuf:"bytes,10,rep,name=Transactions,proto3" json:"Transactions,omitempty"`
	Response      *Response `protobuf:"bytes,11,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *Block) Reset() {
	*x = Block{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_blk_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Block) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Block) ProtoMessage() {}

func (x *Block) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_blk_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Block.ProtoReflect.Descriptor instead.
func (*Block) Descriptor() ([]byte, []int) {
	return file_api_v1_blk_proto_rawDescGZIP(), []int{28}
}

func (x *Block) GetNumber() uint64 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *Block) GetPrevBlockHash() string {
	if x != nil {
		return x.PrevBlockHash
	}
	return ""
}

func (x *Block) GetTimeStamp() uint64 {
	if x != nil {
		return x.TimeStamp
	}
	return 0
}

func (x *Block) GetBeneficiaryID() uint64 {
	if x != nil {
		return x.BeneficiaryID
	}
	return 0
}

func (x *Block) GetDifficulty() uint32 {
	if x != nil {
		return x.Difficulty
	}
	return 0
}

func (x *Block) GetMiningReward() uint64 {
	if x != nil {
		return x.MiningReward
	}
	return 0
}

func (x *Block) GetStateRoot() string {
	if x != nil {
		return x.StateRoot
	}
	return ""
}

func (x *Block) GetTransRoot() string {
	if x != nil {
		return x.TransRoot
	}
	return ""
}

func (x *Block) GetNonce() uint64 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *Block) GetTransactions() []*Tx {
	if x != nil {
		return x.Transactions
	}
	return nil
}

func (x *Block) GetResponse() *Response {
	if x != nil {
		return x.Response
	}
	return nil
}

type KeyStore struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Storage     string            `protobuf:"bytes,1,opt,name=storage,proto3" json:"storage,omitempty"`                                                                                           // 	storage  keyStore
	Cache       string            `protobuf:"bytes,2,opt,name=cache,proto3" json:"cache,omitempty"`                                                                                               // cache    *accountCache
	Unlocked    map[string]string `protobuf:"bytes,3,rep,name=unlocked,proto3" json:"unlocked,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` //  unlocked map[common.Address]*unlocked
	Wallets     []*Wallet         `protobuf:"bytes,4,rep,name=wallets,proto3" json:"wallets,omitempty"`
	UpdateFeed  string            `protobuf:"bytes,5,opt,name=updateFeed,proto3" json:"updateFeed,omitempty"`   // event.Feed
	UpdateScope string            `protobuf:"bytes,6,opt,name=updateScope,proto3" json:"updateScope,omitempty"` // event.SubscriptionScope
	Updating    bool              `protobuf:"varint,7,opt,name=updating,proto3" json:"updating,omitempty"`
	Response    *Response         `protobuf:"bytes,8,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *KeyStore) Reset() {
	*x = KeyStore{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_blk_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeyStore) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyStore) ProtoMessage() {}

func (x *KeyStore) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_blk_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyStore.ProtoReflect.Descriptor instead.
func (*KeyStore) Descriptor() ([]byte, []int) {
	return file_api_v1_blk_proto_rawDescGZIP(), []int{29}
}

func (x *KeyStore) GetStorage() string {
	if x != nil {
		return x.Storage
	}
	return ""
}

func (x *KeyStore) GetCache() string {
	if x != nil {
		return x.Cache
	}
	return ""
}

func (x *KeyStore) GetUnlocked() map[string]string {
	if x != nil {
		return x.Unlocked
	}
	return nil
}

func (x *KeyStore) GetWallets() []*Wallet {
	if x != nil {
		return x.Wallets
	}
	return nil
}

func (x *KeyStore) GetUpdateFeed() string {
	if x != nil {
		return x.UpdateFeed
	}
	return ""
}

func (x *KeyStore) GetUpdateScope() string {
	if x != nil {
		return x.UpdateScope
	}
	return ""
}

func (x *KeyStore) GetUpdating() bool {
	if x != nil {
		return x.Updating
	}
	return false
}

func (x *KeyStore) GetResponse() *Response {
	if x != nil {
		return x.Response
	}
	return nil
}

type KeystoreWallet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account  string    `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`   // accounts.Account
	Keystore *KeyStore `protobuf:"bytes,2,opt,name=keystore,proto3" json:"keystore,omitempty"` // keystore *KeyStore
	Response *Response `protobuf:"bytes,3,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *KeystoreWallet) Reset() {
	*x = KeystoreWallet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_blk_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeystoreWallet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeystoreWallet) ProtoMessage() {}

func (x *KeystoreWallet) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_blk_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeystoreWallet.ProtoReflect.Descriptor instead.
func (*KeystoreWallet) Descriptor() ([]byte, []int) {
	return file_api_v1_blk_proto_rawDescGZIP(), []int{30}
}

func (x *KeystoreWallet) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *KeystoreWallet) GetKeystore() *KeyStore {
	if x != nil {
		return x.Keystore
	}
	return nil
}

func (x *KeystoreWallet) GetResponse() *Response {
	if x != nil {
		return x.Response
	}
	return nil
}

type Wallet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WalletID string    `protobuf:"bytes,1,opt,name=WalletID,proto3" json:"WalletID,omitempty"`
	URL      string    `protobuf:"bytes,2,opt,name=URL,proto3" json:"URL,omitempty"`
	Gaslimit uint64    `protobuf:"varint,3,opt,name=gaslimit,proto3" json:"gaslimit,omitempty"`
	Response *Response `protobuf:"bytes,4,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *Wallet) Reset() {
	*x = Wallet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_blk_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Wallet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Wallet) ProtoMessage() {}

func (x *Wallet) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_blk_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Wallet.ProtoReflect.Descriptor instead.
func (*Wallet) Descriptor() ([]byte, []int) {
	return file_api_v1_blk_proto_rawDescGZIP(), []int{31}
}

func (x *Wallet) GetWalletID() string {
	if x != nil {
		return x.WalletID
	}
	return ""
}

func (x *Wallet) GetURL() string {
	if x != nil {
		return x.URL
	}
	return ""
}

func (x *Wallet) GetGaslimit() uint64 {
	if x != nil {
		return x.Gaslimit
	}
	return 0
}

func (x *Wallet) GetResponse() *Response {
	if x != nil {
		return x.Response
	}
	return nil
}

type Wallets struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Wallets  []*Wallet `protobuf:"bytes,1,rep,name=wallets,proto3" json:"wallets,omitempty"`
	Response *Response `protobuf:"bytes,2,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *Wallets) Reset() {
	*x = Wallets{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_blk_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Wallets) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Wallets) ProtoMessage() {}

func (x *Wallets) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_blk_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Wallets.ProtoReflect.Descriptor instead.
func (*Wallets) Descriptor() ([]byte, []int) {
	return file_api_v1_blk_proto_rawDescGZIP(), []int{32}
}

func (x *Wallets) GetWallets() []*Wallet {
	if x != nil {
		return x.Wallets
	}
	return nil
}

func (x *Wallets) GetResponse() *Response {
	if x != nil {
		return x.Response
	}
	return nil
}

var File_api_v1_blk_proto protoreflect.FileDescriptor

var file_api_v1_blk_proto_rawDesc = []byte{
	0x0a, 0x10, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x6c, 0x6b, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x06, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x22, 0x38, 0x0a, 0x08, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x22, 0x27, 0x0a, 0x07, 0x4c, 0x6f, 0x67, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x1c, 0x0a, 0x09, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xaf, 0x02,
	0x0a, 0x07, 0x47, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x70, 0x65, 0x72, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x65, 0x72, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x1e, 0x0a,
	0x0a, 0x64, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0a, 0x64, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x12, 0x1c, 0x0a,
	0x09, 0x6d, 0x69, 0x6e, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x6d, 0x69, 0x6e, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x67,
	0x61, 0x73, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x67,
	0x61, 0x73, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x39, 0x0a, 0x08, 0x62, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x2e, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x73, 0x1a, 0x3b, 0x0a, 0x0d, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0x59, 0x0a, 0x07, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x4e, 0x6f, 0x75, 0x6e,
	0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x4e, 0x6f, 0x75, 0x6e, 0x63, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x07, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x22, 0x37, 0x0a, 0x08, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x2b, 0x0a, 0x08, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x08, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x73, 0x22, 0x2a, 0x0a, 0x0e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0x64, 0x0a, 0x0e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x54, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x12,
	0x1e, 0x0a, 0x0a, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x32, 0x49, 0x44, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x32, 0x49, 0x44, 0x12,
	0x14, 0x0a, 0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x6b, 0x0a, 0x07, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x62, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x12, 0x2c, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0xa9, 0x01, 0x0a, 0x08, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x12,
	0x22, 0x0a, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x65, 0x73, 0x74, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x65, 0x73, 0x74, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x6e, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x65,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x75, 0x6e, 0x63, 0x6f, 0x6d, 0x6d, 0x69,
	0x74, 0x65, 0x64, 0x12, 0x2b, 0x0a, 0x08, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x08, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73,
	0x12, 0x2c, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xcf,
	0x01, 0x0a, 0x0b, 0x52, 0x65, 0x61, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x72, 0x65, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x74, 0x72, 0x65, 0x65, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x72, 0x65, 0x65, 0x74,
	0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x72, 0x65, 0x65, 0x74, 0x32,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x63, 0x69, 0x74, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x61, 0x6c, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x61, 0x6c, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x2c, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x8a, 0x01, 0x0a, 0x0b, 0x42, 0x6f, 0x6f, 0x6b, 0x42, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x37, 0x0a, 0x0c, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63,
	0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x61, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x52, 0x0c, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x12,
	0x2c, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x9e, 0x02,
	0x0a, 0x12, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x48, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x48, 0x61, 0x73, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x4e, 0x6f, 0x6e, 0x63,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x47, 0x61, 0x73, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x08, 0x47, 0x61, 0x73, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x2c, 0x0a, 0x11, 0x47, 0x61,
	0x73, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x50, 0x72, 0x69, 0x63, 0x65, 0x47, 0x57, 0x65, 0x69, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x47, 0x61, 0x73, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x47, 0x57, 0x65, 0x69, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x28,
	0x0a, 0x0f, 0x4d, 0x61, 0x78, 0x47, 0x61, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x47, 0x57, 0x65,
	0x69, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x4d, 0x61, 0x78, 0x47, 0x61, 0x73, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x47, 0x57, 0x65, 0x69, 0x12, 0x26, 0x0a, 0x0e, 0x4d, 0x61, 0x78, 0x47,
	0x61, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x55, 0x53, 0x44, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x4d, 0x61, 0x78, 0x47, 0x61, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x55, 0x53, 0x44,
	0x12, 0x2c, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x80,
	0x02, 0x0a, 0x0e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x47, 0x61, 0x73,
	0x55, 0x73, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x47, 0x61, 0x73, 0x55,
	0x73, 0x65, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x47, 0x61, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x47,
	0x57, 0x65, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x47, 0x61, 0x73, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x47, 0x57, 0x65, 0x69, 0x12, 0x20, 0x0a, 0x0b, 0x47, 0x61, 0x73, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x55, 0x53, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x47, 0x61,
	0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x55, 0x53, 0x44, 0x12, 0x24, 0x0a, 0x0d, 0x46, 0x69, 0x6e,
	0x61, 0x6c, 0x43, 0x6f, 0x73, 0x74, 0x47, 0x57, 0x65, 0x69, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x43, 0x6f, 0x73, 0x74, 0x47, 0x57, 0x65, 0x69, 0x12,
	0x22, 0x0a, 0x0c, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x43, 0x6f, 0x73, 0x74, 0x55, 0x53, 0x44, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x43, 0x6f, 0x73, 0x74,
	0x55, 0x53, 0x44, 0x12, 0x2c, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0xaf, 0x01, 0x0a, 0x0b, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x44, 0x69, 0x66,
	0x66, 0x12, 0x1e, 0x0a, 0x0a, 0x42, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x47, 0x57, 0x65, 0x69, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x42, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x47, 0x57, 0x65,
	0x69, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x66, 0x74, 0x65, 0x72, 0x47, 0x57, 0x65, 0x69, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x41, 0x66, 0x74, 0x65, 0x72, 0x47, 0x57, 0x65, 0x69, 0x12,
	0x1a, 0x0a, 0x08, 0x44, 0x69, 0x66, 0x66, 0x47, 0x57, 0x65, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x44, 0x69, 0x66, 0x66, 0x47, 0x57, 0x65, 0x69, 0x12, 0x18, 0x0a, 0x07, 0x44,
	0x69, 0x66, 0x66, 0x55, 0x53, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x44, 0x69,
	0x66, 0x66, 0x55, 0x53, 0x44, 0x12, 0x2c, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0xeb, 0x01, 0x0a, 0x03, 0x47, 0x61, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x4c,
	0x61, 0x73, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09,
	0x4c, 0x61, 0x73, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x22, 0x0a, 0x0c, 0x53, 0x61, 0x66,
	0x65, 0x47, 0x61, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0c, 0x53, 0x61, 0x66, 0x65, 0x47, 0x61, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x28, 0x0a,
	0x0f, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x47, 0x61, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x47,
	0x61, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x46, 0x61, 0x73, 0x74, 0x47,
	0x61, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x46,
	0x61, 0x73, 0x74, 0x47, 0x61, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x53,
	0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x42, 0x61, 0x73, 0x65, 0x46, 0x65, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0e, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x42, 0x61, 0x73, 0x65,
	0x46, 0x65, 0x65, 0x12, 0x2c, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x9d, 0x01, 0x0a, 0x09, 0x45, 0x74, 0x68, 0x65, 0x72, 0x73, 0x63, 0x61, 0x6e, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x61, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x59, 0x0a, 0x0d, 0x44, 0x69, 0x61, 0x6c, 0x65, 0x64, 0x42, 0x61, 0x63, 0x6b, 0x65,
	0x6e, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x44, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x07, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x44, 0x22, 0x88, 0x01, 0x0a,
	0x10, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e,
	0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x41, 0x75, 0x74, 0x6f, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x41, 0x75, 0x74, 0x6f, 0x43, 0x6f, 0x6d, 0x6d, 0x69,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x4b, 0x65, 0x79, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x50, 0x72, 0x69, 0x76,
	0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x73, 0x22, 0x37, 0x0a, 0x06, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x12, 0x2d, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x61, 0x6c,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x22, 0x1a, 0x0a, 0x0a, 0x4d, 0x6f, 0x64, 0x4e, 0x53, 0x63, 0x61, 0x6c, 0x61, 0x72, 0x12, 0x0c,
	0x0a, 0x01, 0x6e, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x01, 0x6e, 0x22, 0x18, 0x0a, 0x08,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x12, 0x0c, 0x0a, 0x01, 0x6e, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0d, 0x52, 0x01, 0x6e, 0x22, 0x60, 0x0a, 0x0a, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74,
	0x65, 0x4b, 0x65, 0x79, 0x12, 0x24, 0x0a, 0x03, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x4e, 0x53,
	0x63, 0x61, 0x6c, 0x61, 0x72, 0x52, 0x03, 0x4b, 0x65, 0x79, 0x12, 0x2c, 0x0a, 0x08, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x79, 0x0a, 0x09, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x1e, 0x0a, 0x01, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x56,
	0x61, 0x6c, 0x52, 0x01, 0x78, 0x12, 0x1e, 0x0a, 0x01, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x56,
	0x61, 0x6c, 0x52, 0x01, 0x79, 0x12, 0x2c, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0xd1, 0x01, 0x0a, 0x0c, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x38, 0x0a, 0x06, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f,
	0x6f, 0x6b, 0x75, 0x70, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x2c,
	0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x1a, 0x39, 0x0a, 0x0b,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xac, 0x02, 0x0a, 0x04, 0x6e, 0x6f, 0x64, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x70, 0x61, 0x74, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79,
	0x12, 0x32, 0x0a, 0x0d, 0x77, 0x69, 0x6c, 0x64, 0x63, 0x61, 0x72, 0x64, 0x43, 0x68, 0x69, 0x6c,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x52, 0x0d, 0x77, 0x69, 0x6c, 0x64, 0x63, 0x61, 0x72, 0x64, 0x43,
	0x68, 0x69, 0x6c, 0x64, 0x12, 0x32, 0x0a, 0x0d, 0x63, 0x61, 0x74, 0x63, 0x68, 0x41, 0x6c, 0x6c,
	0x43, 0x68, 0x69, 0x6c, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x52, 0x0d, 0x63, 0x61, 0x74, 0x63, 0x68,
	0x41, 0x6c, 0x6c, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x64, 0x64, 0x53,
	0x6c, 0x61, 0x73, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x61, 0x64, 0x64, 0x53,
	0x6c, 0x61, 0x73, 0x68, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x43, 0x61, 0x74, 0x63, 0x68, 0x41,
	0x6c, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x43, 0x61, 0x74, 0x63,
	0x68, 0x41, 0x6c, 0x6c, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x6d, 0x70, 0x6c, 0x69, 0x63, 0x69, 0x74,
	0x48, 0x65, 0x61, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x6d, 0x70, 0x6c,
	0x69, 0x63, 0x69, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x2c, 0x0a, 0x11, 0x6c, 0x65, 0x61, 0x66,
	0x57, 0x69, 0x6c, 0x64, 0x63, 0x61, 0x72, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x09, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x11, 0x6c, 0x65, 0x61, 0x66, 0x57, 0x69, 0x6c, 0x64, 0x63, 0x61, 0x72,
	0x64, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x22, 0xa2, 0x03, 0x0a, 0x02, 0x74, 0x78, 0x12, 0x20, 0x0a,
	0x0b, 0x46, 0x72, 0x6f, 0x6d, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x46, 0x72, 0x6f, 0x6d, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x46, 0x72, 0x6f, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x46, 0x72, 0x6f, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x54,
	0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x54, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x54,
	0x6f, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x54, 0x6f, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x44, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x44, 0x12, 0x14, 0x0a,
	0x05, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x4e, 0x6f,
	0x6e, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x54, 0x69, 0x70,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x54, 0x69, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x44,
	0x61, 0x74, 0x61, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x1c, 0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1a, 0x0a,
	0x08, 0x47, 0x61, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x08, 0x47, 0x61, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x47, 0x61, 0x73,
	0x55, 0x6e, 0x69, 0x74, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x47, 0x61, 0x73,
	0x55, 0x6e, 0x69, 0x74, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x53, 0x69, 0x67, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x53, 0x69, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x72, 0x6f, 0x6f, 0x66,
	0x18, 0x0e, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x12, 0x1e, 0x0a,
	0x0a, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x0f, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0a, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x2c, 0x0a,
	0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x6c, 0x0a, 0x09, 0x74,
	0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x02, 0x54, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x74, 0x78, 0x52, 0x02, 0x54, 0x78, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x07, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x22, 0x5a, 0x0a, 0x13, 0x74, 0x78, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x57, 0x69, 0x74, 0x68, 0x50, 0x68, 0x72, 0x61, 0x73, 0x65,
	0x12, 0x2b, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x74, 0x78, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70,
	0x68, 0x72, 0x61, 0x73, 0x65, 0x22, 0xfd, 0x02, 0x0a, 0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x12,
	0x16, 0x0a, 0x06, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x06, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x50, 0x72, 0x65, 0x76, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x50, 0x72, 0x65, 0x76, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x12, 0x1c, 0x0a,
	0x09, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x24, 0x0a, 0x0d, 0x42,
	0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0d, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x49,
	0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x44, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x44, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74,
	0x79, 0x12, 0x22, 0x0a, 0x0c, 0x4d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x4d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x6f,
	0x6f, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x6f, 0x6f, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x52, 0x6f, 0x6f, 0x74,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x52, 0x6f, 0x6f,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x05, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x2e, 0x0a, 0x0c, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x74, 0x78, 0x52, 0x0c, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2c, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xe9, 0x02, 0x0a, 0x08, 0x4b, 0x65, 0x79, 0x53, 0x74, 0x6f,
	0x72, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x61, 0x63, 0x68, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x61, 0x63,
	0x68, 0x65, 0x12, 0x3a, 0x0a, 0x08, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x65,
	0x79, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x12, 0x28,
	0x0a, 0x07, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52,
	0x07, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x46, 0x65, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x46, 0x65, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x2c, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x1a, 0x3b, 0x0a, 0x0d, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x86, 0x01, 0x0a, 0x0e, 0x6b, 0x65, 0x79, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x57, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2c,
	0x0a, 0x08, 0x6b, 0x65, 0x79, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x65, 0x79, 0x53, 0x74, 0x6f,
	0x72, 0x65, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x2c, 0x0a, 0x08,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x80, 0x01, 0x0a, 0x06, 0x57,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49,
	0x44, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x52, 0x4c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x55, 0x52, 0x4c, 0x12, 0x1a, 0x0a, 0x08, 0x67, 0x61, 0x73, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x67, 0x61, 0x73, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12,
	0x2c, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x61, 0x0a,
	0x07, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x73, 0x12, 0x28, 0x0a, 0x07, 0x77, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x07, 0x77, 0x61, 0x6c, 0x6c, 0x65,
	0x74, 0x73, 0x12, 0x2c, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x32, 0x3e, 0x0a, 0x03, 0x42, 0x6c, 0x6b, 0x12, 0x37, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x42, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x22, 0x00,
	0x32, 0x44, 0x0a, 0x09, 0x42, 0x6c, 0x6b, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x12, 0x37, 0x0a,
	0x0a, 0x47, 0x65, 0x74, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x73, 0x12, 0x16, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x73, 0x22, 0x00, 0x42, 0x33, 0x5a, 0x31, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x68, 0x6f, 0x77, 0x61, 0x72, 0x64, 0x2d, 0x6c, 0x65, 0x65, 0x2f,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x74, 0x79, 0x70, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x5f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_api_v1_blk_proto_rawDescOnce sync.Once
	file_api_v1_blk_proto_rawDescData = file_api_v1_blk_proto_rawDesc
)

func file_api_v1_blk_proto_rawDescGZIP() []byte {
	file_api_v1_blk_proto_rawDescOnce.Do(func() {
		file_api_v1_blk_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_v1_blk_proto_rawDescData)
	})
	return file_api_v1_blk_proto_rawDescData
}

var file_api_v1_blk_proto_msgTypes = make([]protoimpl.MessageInfo, 36)
var file_api_v1_blk_proto_goTypes = []interface{}{
	(*Response)(nil),            // 0: api.v1.Response
	(*LogData)(nil),             // 1: api.v1.LogData
	(*Genesis)(nil),             // 2: api.v1.Genesis
	(*Account)(nil),             // 3: api.v1.Account
	(*Accounts)(nil),            // 4: api.v1.Accounts
	(*AccountRequest)(nil),      // 5: api.v1.AccountRequest
	(*TokenTxRequest)(nil),      // 6: api.v1.TokenTxRequest
	(*Balance)(nil),             // 7: api.v1.Balance
	(*Balances)(nil),            // 8: api.v1.Balances
	(*RealAddress)(nil),         // 9: api.v1.RealAddress
	(*BookBetInfo)(nil),         // 10: api.v1.BookBetInfo
	(*TransactionDetails)(nil),  // 11: api.v1.TransactionDetails
	(*ReceiptDetails)(nil),      // 12: api.v1.ReceiptDetails
	(*BalanceDiff)(nil),         // 13: api.v1.BalanceDiff
	(*Gas)(nil),                 // 14: api.v1.Gas
	(*Etherscan)(nil),           // 15: api.v1.Etherscan
	(*DialedBackend)(nil),       // 16: api.v1.DialedBackend
	(*SimulatedBackend)(nil),    // 17: api.v1.SimulatedBackend
	(*Client)(nil),              // 18: api.v1.Client
	(*ModNScalar)(nil),          // 19: api.v1.ModNScalar
	(*FieldVal)(nil),            // 20: api.v1.FieldVal
	(*PrivateKey)(nil),          // 21: api.v1.PrivateKey
	(*PublicKey)(nil),           // 22: api.v1.PublicKey
	(*LookupResult)(nil),        // 23: api.v1.LookupResult
	(*Node)(nil),                // 24: api.v1.node
	(*Tx)(nil),                  // 25: api.v1.tx
	(*TxRequest)(nil),           // 26: api.v1.txRequest
	(*TxRequestWithPhrase)(nil), // 27: api.v1.txRequestWithPhrase
	(*Block)(nil),               // 28: api.v1.block
	(*KeyStore)(nil),            // 29: api.v1.KeyStore
	(*KeystoreWallet)(nil),      // 30: api.v1.keystoreWallet
	(*Wallet)(nil),              // 31: api.v1.Wallet
	(*Wallets)(nil),             // 32: api.v1.Wallets
	nil,                         // 33: api.v1.Genesis.BalancesEntry
	nil,                         // 34: api.v1.LookupResult.ParamsEntry
	nil,                         // 35: api.v1.KeyStore.UnlockedEntry
}
var file_api_v1_blk_proto_depIdxs = []int32{
	33, // 0: api.v1.Genesis.balances:type_name -> api.v1.Genesis.BalancesEntry
	3,  // 1: api.v1.Accounts.accounts:type_name -> api.v1.Account
	0,  // 2: api.v1.Balance.response:type_name -> api.v1.Response
	7,  // 3: api.v1.Balances.balances:type_name -> api.v1.Balance
	0,  // 4: api.v1.Balances.response:type_name -> api.v1.Response
	0,  // 5: api.v1.RealAddress.response:type_name -> api.v1.Response
	9,  // 6: api.v1.BookBetInfo.participants:type_name -> api.v1.RealAddress
	0,  // 7: api.v1.BookBetInfo.response:type_name -> api.v1.Response
	0,  // 8: api.v1.TransactionDetails.response:type_name -> api.v1.Response
	0,  // 9: api.v1.ReceiptDetails.response:type_name -> api.v1.Response
	0,  // 10: api.v1.BalanceDiff.response:type_name -> api.v1.Response
	0,  // 11: api.v1.Gas.response:type_name -> api.v1.Response
	0,  // 12: api.v1.Etherscan.response:type_name -> api.v1.Response
	9,  // 13: api.v1.Client.address:type_name -> api.v1.RealAddress
	19, // 14: api.v1.PrivateKey.Key:type_name -> api.v1.ModNScalar
	0,  // 15: api.v1.PrivateKey.response:type_name -> api.v1.Response
	20, // 16: api.v1.PublicKey.x:type_name -> api.v1.FieldVal
	20, // 17: api.v1.PublicKey.y:type_name -> api.v1.FieldVal
	0,  // 18: api.v1.PublicKey.response:type_name -> api.v1.Response
	34, // 19: api.v1.LookupResult.Params:type_name -> api.v1.LookupResult.ParamsEntry
	0,  // 20: api.v1.LookupResult.response:type_name -> api.v1.Response
	24, // 21: api.v1.node.wildcardChild:type_name -> api.v1.node
	24, // 22: api.v1.node.catchAllChild:type_name -> api.v1.node
	0,  // 23: api.v1.tx.response:type_name -> api.v1.Response
	3,  // 24: api.v1.txRequest.account:type_name -> api.v1.Account
	25, // 25: api.v1.txRequest.Tx:type_name -> api.v1.tx
	26, // 26: api.v1.txRequestWithPhrase.request:type_name -> api.v1.txRequest
	25, // 27: api.v1.block.Transactions:type_name -> api.v1.tx
	0,  // 28: api.v1.block.response:type_name -> api.v1.Response
	35, // 29: api.v1.KeyStore.unlocked:type_name -> api.v1.KeyStore.UnlockedEntry
	31, // 30: api.v1.KeyStore.wallets:type_name -> api.v1.Wallet
	0,  // 31: api.v1.KeyStore.response:type_name -> api.v1.Response
	29, // 32: api.v1.keystoreWallet.keystore:type_name -> api.v1.KeyStore
	0,  // 33: api.v1.keystoreWallet.response:type_name -> api.v1.Response
	0,  // 34: api.v1.Wallet.response:type_name -> api.v1.Response
	31, // 35: api.v1.Wallets.wallets:type_name -> api.v1.Wallet
	0,  // 36: api.v1.Wallets.response:type_name -> api.v1.Response
	5,  // 37: api.v1.Blk.GetBalance:input_type -> api.v1.AccountRequest
	5,  // 38: api.v1.BlkWallet.GetWallets:input_type -> api.v1.AccountRequest
	7,  // 39: api.v1.Blk.GetBalance:output_type -> api.v1.Balance
	32, // 40: api.v1.BlkWallet.GetWallets:output_type -> api.v1.Wallets
	39, // [39:41] is the sub-list for method output_type
	37, // [37:39] is the sub-list for method input_type
	37, // [37:37] is the sub-list for extension type_name
	37, // [37:37] is the sub-list for extension extendee
	0,  // [0:37] is the sub-list for field type_name
}

func init() { file_api_v1_blk_proto_init() }
func file_api_v1_blk_proto_init() {
	if File_api_v1_blk_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_v1_blk_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_blk_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_blk_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Genesis); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_blk_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Account); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_blk_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Accounts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_blk_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_blk_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokenTxRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_blk_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Balance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_blk_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Balances); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_blk_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RealAddress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_blk_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BookBetInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_blk_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_blk_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReceiptDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_blk_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BalanceDiff); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_blk_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Gas); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_blk_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Etherscan); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_blk_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DialedBackend); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_blk_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SimulatedBackend); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_blk_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Client); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_blk_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModNScalar); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_blk_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FieldVal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_blk_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrivateKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_blk_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublicKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_blk_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LookupResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_blk_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Node); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_blk_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tx); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_blk_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TxRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_blk_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TxRequestWithPhrase); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_blk_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Block); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_blk_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeyStore); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_blk_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeystoreWallet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_blk_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Wallet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_blk_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Wallets); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_v1_blk_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   36,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_api_v1_blk_proto_goTypes,
		DependencyIndexes: file_api_v1_blk_proto_depIdxs,
		MessageInfos:      file_api_v1_blk_proto_msgTypes,
	}.Build()
	File_api_v1_blk_proto = out.File
	file_api_v1_blk_proto_rawDesc = nil
	file_api_v1_blk_proto_goTypes = nil
	file_api_v1_blk_proto_depIdxs = nil
}
